@model List<EmployeeViewModel>

<div class="container mt-5">
    <h1 class="mb-4">Employee List</h1>
    <a class="btn btn-primary mb-3" href="@Url.Action("CreateEmployee", "Employee")">Create Employee</a>
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>ID</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Employee Code</th>
                <th>Date of Joining</th>
                <th>Date of Birth</th>
                <th>Salary</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in Model)
            {
                <tr>
                    <td>@employee.ID</td>
                    <td>@employee.FirstName</td>
                    <td>@employee.LastName</td>
                    <td>@employee.EmployeeCode</td>
                    <td>@DateTimeOffset.FromUnixTimeSeconds((long)employee.DateOfJoining).UtcDateTime.ToString("yyyy-MM-dd")</td>
                    <td>@employee.DateOfBirth.ToString("yyyy-MM-dd")</td>
                    <td>@employee.Salary</td>
                    <td>
                        <a class="btn btn-warning btn-sm" href="@Url.Action("EditEmployee", "Employee", new { id = employee.ID })">Edit</a>
                        <button class="btn btn-danger btn-sm delete-button" data-id="@employee.ID">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>


<script>
    window.onload = function () {
        $('.delete-button').click(function () {
            const employeeId = $(this).data('id');

            if (confirm('Are you sure you want to delete this employee?')) {
                $.ajax({
                    url: `/Employee/DeleteEmployee/${employeeId}`,
                    type: 'DELETE',
                    beforeSend: function (xhr) {
                        const token = getCookie('accessToken');
                        xhr.setRequestHeader('Authorization', 'Bearer ' + token);
                    },
                    success: function (result) {
                        location.reload();
                    },
                    error: function (xhr, status, error) {
                        alert('An error occurred while deleting the employee.');
                    }
                });
            }
        });

        function getCookie(name) {
            let cookieValue = null;
            if (document.cookie && document.cookie !== '') {
                const cookies = document.cookie.split(';');
                for (let i = 0; i < cookies.length; i++) {
                    const cookie = cookies[i].trim();
                    if (cookie.substring(0, name.length + 1) === (name + '=')) {
                        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                        break;
                    }
                }
            }
            return cookieValue;
        }
    };
</script>
